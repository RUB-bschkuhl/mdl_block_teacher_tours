{"version":3,"file":"teacher_tours.min.js","sources":["../src/teacher_tours.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n/**\n * JavaScript for handling tour creation via button click.\n *\n * @module block_teacher_tours/teacher_tours\n * @copyright 2025 Your Name <your.email@example.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/str'], // 'core/templates'\n    function ($, Ajax, Str) { //Templates\n        /*  $step = new step();\n         $step->set_tourid($this->tour->get_id());\n         $step->set_title($title);\n         $step->set_content($content, FORMAT_HTML);\n         $step->set_targettype($targettype);\n         $step->set_targetvalue($targetvalue);\n         // Set any additional configuration options\n         foreach ($config as $key => $value) {\n             $step->set_config($key, $value);\n         } */\n\n        /*\n        Placement Options\n            placement (string)\n        Position of the step popup relative to the target element\n        Options: 'top', 'bottom', 'left', 'right'\n        Example: 'placement' => 'top'\n        Behavior Options\n            orphan (boolean)\n        Whether the step should be displayed even if the target element is not found\n        Example: 'orphan' => true\n            backdrop (boolean)\n        Whether to show a backdrop behind the tour step (highlighting the target element)\n        Example: 'backdrop' => true\n            reflex (boolean)\n        Whether clicking on the element will automatically advance to the next step\n        Example: 'reflex' => true\n        */\n\n        /*\n        $this->tour = new tour();\n        $this->tour->set_name($name);\n        $this->tour->set_description($description);\n        $this->tour->set_pathmatch($pathmatch);\n        $this->tour->set_enabled(tour::ENABLED);\n        $this->tour->set_filter_values('cssselector', ['#block-course-audit']);\n        $this->tour->set_sortorder(0);\n        */\n\n        // JSON object that holds the information for the tour that is being sent to an endpoint when the teacher hits save\n        let tourObject = {\n            steps: [\n                /*\n                template step object\n                {\n                    title: '',\n                    content: '',\n                    targettype: '2',\n                    targetvalue: '',\n                    placement: '',\n                    orphan: 'true',\n                    backdrop: '',\n                    reflex: 'false',\n                    config: '',\n                } */\n            ],\n            name: '',\n            description: '',\n            pathmatch: '',\n            enabled: '',\n            filter_values: '',\n            sortorder: '',\n        };\n\n        let currentStepObject = {};\n\n        // Init the tourobject and starts the editor\n        const init = function (courseid) {\n            initializeEventBindings();\n            resetTourObject(courseid);\n        };\n\n        // Starts the picker at first\n        const startEditor = function () {\n            // Hide the create new tour button when editing\n            $('#start-tour-creation').hide();\n            $('#step-creation').hide();\n            // Show the tour editor interface\n            $('#tour-editor').show();\n            highlightElements();\n        };\n\n        // Show current step indicator\n        const showCurrentStepIndicator = function (elementText) {\n            $('#current-step-element').text(elementText);\n            $('#current-step-indicator').show();\n        };\n\n        // Show current step indicator\n        const showTourStepsPreview = function () {\n            $('.tour-preview').html('');\n            tourObject.steps.forEach((step, index) => {\n                $('.tour-preview')\n                    .append('<div class=\"tour-step-preview\">Step ' + (index + 1) +\n                        ' <strong> ' + step.targetvalue + ':</strong> ' + step.title + '</div>');\n            });\n            $('.tour-preview').show();\n        };\n\n        // Hide current step indicator\n        const hideCurrentStepIndicator = function () {\n            $('#current-step-indicator').hide();\n        };\n\n        const resetCurrentStepObject = function () {\n            currentStepObject = {};\n        };\n\n        // Handle tour toggle switches\n        const handleTourToggle = function (tourId, enabled) {\n            // console.log('Toggling tour', tourId, 'to', enabled ? 'enabled' : 'disabled');\n\n            // Make AJAX call to backend to save the state\n            Ajax.call([{\n                methodname: 'block_teacher_tours_toggle_tour_enabled',\n                args: {tourid: tourId, enabled: enabled}\n            }])[0].done(function (response) {\n                if (response.success) {\n                    // Update the UI based on the actual state from server.\n                    const tourCard = $(`[data-tour-id=\"${tourId}\"]`);\n                    const statusElement = tourCard.find('.tour-status');\n\n                    if (response.enabled) {\n                        Str.get_string('enabled', 'block_teacher_tours')\n                            .then(function (enabledText) {\n                                statusElement.html('<i class=\"fa fa-check-circle text-success\"></i> ' + enabledText);\n                            });\n                        tourCard.find('.tour-toggle').prop('checked', true);\n                    } else {\n                        Str.get_string('disabled', 'block_teacher_tours')\n                            .then(function (disabledText) {\n                                statusElement.html('<i class=\"fa fa-times-circle text-muted\"></i> ' + disabledText);\n                            });\n                        tourCard.find('.tour-toggle').prop('checked', false);\n                    }\n                    // console.log('Tour toggle successful');\n                } else {\n                    // Revert the toggle if the operation failed\n                    // console.error('Failed to toggle tour');\n                    const tourCard = $(`[data-tour-id=\"${tourId}\"]`);\n                    tourCard.find('.tour-toggle').prop('checked', !enabled);\n                    alert('Failed to update tour status. Please try again.');\n                }\n            }).fail(function () {\n                // console.error('Error toggling tour:', error);\n                // Revert the toggle on error\n                const tourCard = $(`[data-tour-id=\"${tourId}\"]`);\n                tourCard.find('.tour-toggle').prop('checked', !enabled);\n                alert('Error updating tour status. Please try again.');\n            });\n        };\n\n        // Handle tour editing\n        const handleTourEdit = function (tourId) {\n            // console.log('Editing tour', tourId);\n            // TODO: Should open the form in the backend to edit the tour\n            alert('Edit functionality will be implemented when backend is ready. Tour ID: ' + tourId);\n        };\n\n        // Handle tour deletion\n        const handleTourDelete = function (tourId) {\n            // console.log('Deleting tour', tourId);\n            if (confirm('Are you sure you want to delete this tour? This action cannot be undone.')) {\n                // TODO: Make AJAX call to backend to save the state\n                // Ajax.call([{\n                //     methodname: 'block_teacher_tours_delete_tour',\n                //     args: { tourid: tourId, enabled: enabled }\n                // }]);\n                // For now, just hide the card\n                $(`[data-tour-id=\"${tourId}\"]`).fadeOut(300, function () {\n                    $(this).remove();\n                    // Check if no tours left\n                    if ($('.tour-card').length === 0) {\n                        $('.existing-tours').hide();\n                    }\n                });\n                alert('Delete functionality will be implemented when backend is ready. Tour ID: ' + tourId);\n            }\n        };\n\n        // Store event handlers for specific removal\n        const tourEventHandlers = {\n            sectionClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                const section = e.currentTarget;\n                currentStepObject = {\n                    targettype: '0',\n                    targetvalue: '#' + section.getAttribute('id'),\n                    placement: 'right',\n                    orphan: 'false',\n                    backdrop: 'true',\n                    reflex: 'false',\n                };\n                // Show current step indicator\n                showCurrentStepIndicator('Section: ' + section.getAttribute('data-sectionname'));\n                removeHighlighting();\n                startTextEditor();\n            },\n            moduleClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                const mod = e.currentTarget;\n                currentStepObject = {\n                    targettype: '0',\n                    targetvalue: '#' + mod.getAttribute('id'),\n                    placement: 'right',\n                    orphan: 'false',\n                    backdrop: 'true',\n                    reflex: 'false',\n                };\n                // Show current step indicator\n                // check if direct child of mod has data-activityname\n                showCurrentStepIndicator('Module: ' + mod.childNodes[1].getAttribute('data-activityname'));\n\n                removeHighlighting();\n                startTextEditor();\n            }\n        };\n\n        // Highlight the elements\n        const highlightElements = function () {\n            // Highlight the sections in light green\n            // Highlight the mods in blue\n            document.querySelectorAll('[id^=\"section-\"]').forEach(section => {\n                section.classList.add('section-highlight');\n                section.addEventListener('click', tourEventHandlers.sectionClick);\n            });\n            document.querySelectorAll('[id^=\"module-\"]').forEach(mod => {\n                mod.classList.add('module-highlight');\n                mod.addEventListener('click', tourEventHandlers.moduleClick);\n            });\n        };\n\n        // The second step on creating a step for the tour is creating a text that should show when the step is active\n        const startTextEditor = function () {\n            $('#text-editor').show();\n            clearTextEditor();\n            $('#save-tour').hide();\n            $('#step-title').focus();\n        };\n\n        const clearTextEditor = function () {\n            $('#step-title').val('');\n            $('#step-content').val('');\n            // $('#step-placement').val('right');\n            // $('#step-backdrop').prop('checked', true);\n            // $('#step-orphan').prop('checked', false);\n            // $('#step-reflex').prop('checked', false);\n        };\n\n        const removeHighlighting = function () {\n            // Remove the highlighting from the elements and their specific event listeners\n            document.querySelectorAll('[id^=\"section-\"]').forEach(section => {\n                section.classList.remove('section-highlight');\n                section.removeEventListener('click', tourEventHandlers.sectionClick);\n            });\n            document.querySelectorAll('[id^=\"module-\"]').forEach(mod => {\n                mod.classList.remove('module-highlight');\n                mod.removeEventListener('click', tourEventHandlers.moduleClick);\n            });\n        };\n\n        // Send the tourObject to the endpoint\n        const saveTour = function () {\n            $('#save-tour').prop('disabled', true).text('Saving...');\n            // Send the tourObject to the endpoint\n            Ajax.call([{\n                methodname: 'block_teacher_tours_save_tour',\n                args: {tour: tourObject},\n            }])[0].then(function (response) {\n                //If ok reset the tourObject, if not show error\n                if (!response && !response.status === 'ok') {\n                    alert('Error saving tour: ' + (response.message || 'Unknown error'));\n                }\n                resetTourObject();\n                $('#tour-editor').hide();\n                $('#start-tour-creation').show();\n                $('#step-creation').show();\n                hideCurrentStepIndicator();\n                clearTextEditor();\n                removeHighlighting();\n                $('.tour-preview').html('');\n                $('.tour-preview').hide();\n                Str.get_string('savetour', 'block_teacher_tours')\n                    .then(function (text) {\n                        $('#save-tour').prop('disabled', false).html('<i class=\"fa fa-save\"></i> ' + text);\n                    });\n            });\n        };\n\n        // Reset the tourObject\n        const resetTourObject = function (courseid) {\n            tourObject = {\n                steps: [],\n                name: 'tour for course ' + courseid,\n                description: 'A tour for course ' + courseid,\n                pathmatch: '/course/view.php?id=' + courseid,\n                enabled: '',\n                filter_values: '',\n                sortorder: '',\n            };\n        };\n\n        // Add a step to the tourObject\n        const addStep = function (stepData) {\n            tourObject.steps.push(stepData || {});\n        };\n\n        // Save the current step to the tour object\n        const saveStep = function () {\n            // Get values from the form\n            const title = $('#step-title').val();\n            const content = $('#step-content').val();\n            // TODO maybe\n            // const placement = $('#step-placement').val();\n            // const backdrop = $('#step-backdrop').prop('checked') ? 'true' : 'false';\n            // const orphan = $('#step-orphan').prop('checked') ? 'true' : 'false';\n            // const reflex = $('#step-reflex').prop('checked') ? 'true' : 'false';\n\n            // Update the current step object with form values\n            currentStepObject.title = title;\n            currentStepObject.content = content;\n            // currentStepObject.placement = placement;\n            // currentStepObject.backdrop = backdrop;\n            // currentStepObject.orphan = orphan;\n            // currentStepObject.reflex = reflex;\n\n            // Add the step to the tour\n            addStep(currentStepObject);\n        };\n\n        // Initialize event bindings\n        const initializeEventBindings = function () {\n            // Bind click event to start tour creation button\n            $(document).on('click', '#start-tour-creation', function (e) {\n                e.preventDefault();\n                startEditor();\n            });\n\n            // Bind click event to save tour button\n            $(document).on('click', '#save-tour', function (e) {\n                e.preventDefault();\n                saveTour();\n            });\n\n            // Bind click event to save step button\n            $(document).on('click', '#save-step', function (e) {\n                e.preventDefault();\n                saveStep();\n                // Hide the text editor\n                $('#text-editor').hide();\n                $('#save-tour').show();\n                // Reset for next step\n                showTourStepsPreview();\n                hideCurrentStepIndicator();\n                resetCurrentStepObject();\n                // Restart the editor to pick the next element\n                startEditor();\n            });\n\n            // Bind click event to cancel step edit button\n            $(document).on('click', '#cancel-step-edit', function (e) {\n                e.preventDefault();\n                hideCurrentStepIndicator();\n                resetCurrentStepObject();\n                $('#text-editor').hide();\n                startEditor();\n            });\n\n            // Bind click event to cancel tour creation button\n            $(document).on('click', '#cancel-tour-creation', function (e) {\n                e.preventDefault();\n                $('#tour-editor').hide();\n                $('#start-tour-creation').show();\n                hideCurrentStepIndicator();\n                resetTourObject();\n                $('.tour-preview').html('');\n                $('.tour-preview').hide();\n\n            });\n\n            $(document).on('click', '#step-creation', function () {\n                startEditor();\n            });\n\n            // Bind events for tour management\n            $(document).on('change', '.tour-toggle', function () {\n                const tourId = $(this).data('tour-id');\n                const enabled = $(this).is(':checked');\n                handleTourToggle(tourId, enabled);\n            });\n\n            $(document).on('click', '.edit-tour', function (e) {\n                e.preventDefault();\n                const tourId = $(this).data('tour-id');\n                handleTourEdit(tourId);\n            });\n\n            $(document).on('click', '.delete-tour', function (e) {\n                e.preventDefault();\n                const tourId = $(this).data('tour-id');\n                handleTourDelete(tourId);\n            });\n        };\n\n        // Return public API\n        return {\n            currentStepObject: currentStepObject,\n            tourObject: tourObject,\n            init: init,\n            startEditor: startEditor,\n            resetTourObject: resetTourObject,\n            addStep: addStep,\n            saveStep: saveStep,\n            saveTour: saveTour,\n            startTextEditor: startTextEditor,\n            highlightElements: highlightElements,\n            initializeEventBindings: initializeEventBindings\n        };\n    }\n);\n"],"names":["define","$","Ajax","Str","tourObject","steps","name","description","pathmatch","enabled","filter_values","sortorder","currentStepObject","startEditor","hide","show","highlightElements","showCurrentStepIndicator","elementText","text","hideCurrentStepIndicator","resetCurrentStepObject","tourEventHandlers","e","preventDefault","stopPropagation","section","currentTarget","targettype","targetvalue","getAttribute","placement","orphan","backdrop","reflex","removeHighlighting","startTextEditor","mod","childNodes","document","querySelectorAll","forEach","classList","add","addEventListener","clearTextEditor","focus","val","remove","removeEventListener","saveTour","prop","call","methodname","args","tour","then","response","status","alert","message","resetTourObject","html","get_string","courseid","addStep","stepData","push","saveStep","title","content","initializeEventBindings","on","step","index","append","tourId","tourid","done","success","tourCard","statusElement","find","enabledText","disabledText","fail","handleTourToggle","this","data","is","handleTourEdit","confirm","fadeOut","length","handleTourDelete","init"],"mappings":"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"}