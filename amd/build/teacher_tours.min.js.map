{"version":3,"file":"teacher_tours.min.js","sources":["../src/teacher_tours.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n/**\n* JavaScript for handling tour creation via button click.\n*\n* @module block_teacher_tours/teacher_tours\n* @copyright 2025 Your Name <your.email@example.com>\n* @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n*/\n\ndefine(['jquery', 'core/ajax'], //, 'core/ajax', 'core/str', 'core/templates'\n    function ($, Ajax) { //, Ajax, Str, Templates\n        /*  $step = new step();\n         $step->set_tourid($this->tour->get_id());\n         $step->set_title($title);\n         $step->set_content($content, FORMAT_HTML);\n         $step->set_targettype($targettype);\n         $step->set_targetvalue($targetvalue);\n         // Set any additional configuration options\n         foreach ($config as $key => $value) {\n             $step->set_config($key, $value);\n         } */\n\n        /*\n        Placement Options\n            placement (string)\n        Position of the step popup relative to the target element\n        Options: 'top', 'bottom', 'left', 'right'\n        Example: 'placement' => 'top'\n        Behavior Options\n            orphan (boolean)\n        Whether the step should be displayed even if the target element is not found\n        Example: 'orphan' => true\n            backdrop (boolean)\n        Whether to show a backdrop behind the tour step (highlighting the target element)\n        Example: 'backdrop' => true\n            reflex (boolean)\n        Whether clicking on the element will automatically advance to the next step\n        Example: 'reflex' => true\n        */\n\n        /*\n        $this->tour = new tour();\n        $this->tour->set_name($name);\n        $this->tour->set_description($description);\n        $this->tour->set_pathmatch($pathmatch);\n        $this->tour->set_enabled(tour::ENABLED);\n        $this->tour->set_filter_values('cssselector', ['#block-course-audit']);\n        $this->tour->set_sortorder(0);\n        */\n\n        // JSON object that holds the information for the tour that is being sent to an endpoint when the teacher hits save\n        let tourObject = {\n            steps: [\n                /*\n                template step object\n                {\n                    title: '',\n                    content: '',\n                    targettype: '2',\n                    targetvalue: '',\n                    placement: '',\n                    orphan: 'true',\n                    backdrop: '',\n                    reflex: 'false',\n                    config: '',\n                } */\n            ],\n            name: '',\n            description: '',\n            pathmatch: '',\n            enabled: '',\n            filter_values: '',\n            sortorder: '',\n        };\n\n        let currentStepObject = {};\n\n        // Init the tourobject and starts the editor\n        const init = function (courseid) {\n            initializeEventBindings();\n            resetTourObject(courseid);\n        };\n\n        // Starts the picker at first\n        const startEditor = function () {\n            // Hide the create new tour button when editing\n            $('#start-tour-creation').hide();\n            $('#step-creation').hide();\n            // Show the tour editor interface\n            $('#tour-editor').show();\n            highlightElements();\n        };\n\n        // Show current step indicator\n        const showCurrentStepIndicator = function(elementText) {\n            $('#current-step-element').text(elementText);\n            $('#current-step-indicator').show();\n        };\n\n        // Hide current step indicator\n        const hideCurrentStepIndicator = function() {\n            $('#current-step-indicator').hide();\n        };\n\n        // Store event handlers for specific removal\n        const tourEventHandlers = {\n            sectionClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                const section = e.currentTarget;\n                currentStepObject = {\n                    targettype: '2',\n                    targetvalue: '#' + section.getAttribute('id'),\n                    placement: 'right',\n                    orphan: 'false',\n                    backdrop: 'true',\n                    reflex: 'false',\n                };\n                // Show current step indicator\n                showCurrentStepIndicator('Section: ' + section.getAttribute('data-sectionname'));\n                removeHighlighting();\n                startTextEditor();\n            },\n            moduleClick: function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                const mod = e.currentTarget;\n                currentStepObject = {\n                    targettype: '2',\n                    targetvalue: '#' + mod.getAttribute('id'),\n                    placement: 'right',\n                    orphan: 'false',\n                    backdrop: 'true',\n                    reflex: 'false',\n                };\n                // Show current step indicator\n                showCurrentStepIndicator('Module: ' + mod.getAttribute('id'));\n                removeHighlighting();\n                startTextEditor();\n            }\n        };\n\n        // Highlight the elements\n        const highlightElements = function () {\n            // Highlight the sections in light green\n            // Highlight the mods in blue\n            document.querySelectorAll('[id^=\"section-\"]').forEach(section => {\n                section.classList.add('section-highlight');\n                section.addEventListener('click', tourEventHandlers.sectionClick);\n            });\n            document.querySelectorAll('[id^=\"module-\"]').forEach(mod => {\n                mod.classList.add('module-highlight');\n                mod.addEventListener('click', tourEventHandlers.moduleClick);\n            });\n        };\n\n        // The second step on creating a step for the tour is creating a text that should show when the step is active\n        const startTextEditor = function () {\n            $('#text-editor').show();\n            $('#text-editor').html(currentStepObject.content);\n        };\n\n        const removeHighlighting = function () {\n            // Remove the highlighting from the elements and their specific event listeners\n            document.querySelectorAll('[id^=\"section-\"]').forEach(section => {\n                section.classList.remove('section-highlight');\n                section.removeEventListener('click', tourEventHandlers.sectionClick);\n            });\n            document.querySelectorAll('[id^=\"module-\"]').forEach(mod => {\n                mod.classList.remove('module-highlight');\n                mod.removeEventListener('click', tourEventHandlers.moduleClick);\n            });\n        };\n\n        // Send the tourObject to the endpoint\n        const saveTour = function () {\n            // TODO: Implement save functionality on save button click\n            // TODO check if all required fields are filled\n            // TODO send the tourObject to the endpoint via ajax\n            console.log('Saving tour:', tourObject);\n            // call endpoint with ajax\n\n            Ajax.call([{\n                methodname: 'block_teacher_tours_save_tour',\n                args: { tour: tourObject },\n            }])[0].then(function (response) {\n                console.log(\"response\", response, response.status);\n            });\n        };\n\n        // Reset the tourObject\n        const resetTourObject = function (courseid) {\n            tourObject = {\n                steps: [],\n                name: 'tour for course ' + courseid,\n                description: 'A tour for course ' + courseid,\n                pathmatch: '/course/view.php?id=' + courseid,\n                enabled: '',\n                filter_values: '',\n                sortorder: '',\n            };\n        };\n\n        // Add a step to the tourObject\n        const addStep = function (stepData) {\n            tourObject.steps.push(stepData || {});\n        };\n\n        // Save the current step to the tour object\n        const saveStep = function () {\n\n            // Get values from the form\n            const title = $('#step-title').val();\n            const content = $('#step-content').val();\n            // TODO maybe\n            // const placement = $('#step-placement').val();\n            // const backdrop = $('#step-backdrop').prop('checked') ? 'true' : 'false';\n            // const orphan = $('#step-orphan').prop('checked') ? 'true' : 'false';\n            // const reflex = $('#step-reflex').prop('checked') ? 'true' : 'false';\n\n            // Update the current step object with form values\n            currentStepObject.title = title;\n            currentStepObject.content = content;\n            // currentStepObject.placement = placement;\n            // currentStepObject.backdrop = backdrop;\n            // currentStepObject.orphan = orphan;\n            // currentStepObject.reflex = reflex;\n\n            // Add the step to the tour\n            addStep(currentStepObject);\n\n            // Hide the text editor\n            $('#text-editor').hide();\n            $('#text-editor').html('');\n\n            // Reset for next step\n            currentStepObject = {};\n            $('#step-creation').show();\n        };\n\n        // Initialize event bindings\n        const initializeEventBindings = function () {\n            // Bind click event to start tour creation button\n            $(document).on('click', '#start-tour-creation', function (e) {\n                e.preventDefault();\n                startEditor();\n            });\n\n            // Bind click event to cancel tour creation button\n            $(document).on('click', '#cancel-tour-creation', function (e) {\n                e.preventDefault();\n                $('#tour-editor').hide();\n            });\n\n            // Bind click event to save tour button\n            $(document).on('click', '#save-tour', function (e) {\n                e.preventDefault();\n                saveTour();\n            });\n\n            // Bind click event to save step button\n            $(document).on('click', '#save-step', function (e) {\n                e.preventDefault();\n                saveStep();\n            });\n\n            // Bind click event to cancel step edit button\n            $(document).on('click', '#cancel-step-edit', function (e) {\n                e.preventDefault();\n                $('#text-editor').hide();\n                hideCurrentStepIndicator();\n            });\n\n            // Bind click event to clear selection button\n            $(document).on('click', '#clear-selection', function (e) {\n                e.preventDefault();\n                hideCurrentStepIndicator();\n                currentStepObject = {};\n                $('#text-editor').hide();\n            });\n\n            // Bind click event to cancel tour creation button\n            $(document).on('click', '#cancel-tour-creation', function (e) {\n                e.preventDefault();\n                $('#tour-editor').hide();\n                $('#start-tour-creation').show();\n                hideCurrentStepIndicator();\n                currentStepObject = {};\n            });\n\n            $(document).on('click', '#step-creation', function() {\n                startEditor();\n            });\n        };\n\n        // Return public API\n        return {\n            currentStepObject: currentStepObject,\n            tourObject: tourObject,\n            init: init,\n            startEditor: startEditor,\n            resetTourObject: resetTourObject,\n            addStep: addStep,\n            saveStep: saveStep,\n            saveTour: saveTour,\n            startTextEditor: startTextEditor,\n            highlightElements: highlightElements,\n            initializeEventBindings: initializeEventBindings\n        };\n    }\n);"],"names":["define","$","Ajax","tourObject","steps","name","description","pathmatch","enabled","filter_values","sortorder","currentStepObject","startEditor","hide","show","highlightElements","showCurrentStepIndicator","elementText","text","hideCurrentStepIndicator","tourEventHandlers","e","preventDefault","stopPropagation","section","currentTarget","targettype","targetvalue","getAttribute","placement","orphan","backdrop","reflex","removeHighlighting","startTextEditor","mod","document","querySelectorAll","forEach","classList","add","addEventListener","html","content","remove","removeEventListener","saveTour","console","log","call","methodname","args","tour","then","response","status","resetTourObject","courseid","addStep","stepData","push","saveStep","title","val","initializeEventBindings","on","init"],"mappings":";;;;;;;AAsBAA,OAAM,oCAAC,CAAC,SAAU,cACd,SAAUC,EAAGC,MAyCT,IAAIC,WAAa,CACbC,MAAO,GAePC,KAAM,GACNC,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,UAAW,IAGXC,kBAAoB,CAAA,EAGxB,MAMMC,YAAc,WAEhBX,EAAE,wBAAwBY,OAC1BZ,EAAE,kBAAkBY,OAEpBZ,EAAE,gBAAgBa,OAClBC,qBAIEC,yBAA2B,SAASC,aACtChB,EAAE,yBAAyBiB,KAAKD,aAChChB,EAAE,2BAA2Ba,QAI3BK,yBAA2B,WAC7BlB,EAAE,2BAA2BY,QAI3BO,+BACY,SAAUC,GACpBA,EAAEC,iBACFD,EAAEE,kBACF,MAAMC,QAAUH,EAAEI,cAClBd,kBAAoB,CAChBe,WAAY,IACZC,YAAa,IAAMH,QAAQI,aAAa,MACxCC,UAAW,QACXC,OAAQ,QACRC,SAAU,OACVC,OAAQ,SAGZhB,yBAAyB,YAAcQ,QAAQI,aAAa,qBAC5DK,qBACAC,iBACH,EAjBCd,8BAkBW,SAAUC,GACnBA,EAAEC,iBACFD,EAAEE,kBACF,MAAMY,IAAMd,EAAEI,cACdd,kBAAoB,CAChBe,WAAY,IACZC,YAAa,IAAMQ,IAAIP,aAAa,MACpCC,UAAW,QACXC,OAAQ,QACRC,SAAU,OACVC,OAAQ,SAGZhB,yBAAyB,WAAamB,IAAIP,aAAa,OACvDK,qBACAC,iBACJ,EAIEnB,kBAAoB,WAGtBqB,SAASC,iBAAiB,oBAAoBC,SAAQd,UAClDA,QAAQe,UAAUC,IAAI,qBACtBhB,QAAQiB,iBAAiB,QAASrB,mCAEtCgB,SAASC,iBAAiB,mBAAmBC,SAAQH,MACjDA,IAAII,UAAUC,IAAI,oBAClBL,IAAIM,iBAAiB,QAASrB,mCAKhCc,gBAAkB,WACpBjC,EAAE,gBAAgBa,OAClBb,EAAE,gBAAgByC,KAAK/B,kBAAkBgC,UAGvCV,mBAAqB,WAEvBG,SAASC,iBAAiB,oBAAoBC,SAAQd,UAClDA,QAAQe,UAAUK,OAAO,qBACzBpB,QAAQqB,oBAAoB,QAASzB,mCAEzCgB,SAASC,iBAAiB,mBAAmBC,SAAQH,MACjDA,IAAII,UAAUK,OAAO,oBACrBT,IAAIU,oBAAoB,QAASzB,mCAKnC0B,SAAW,WAIbC,QAAQC,IAAI,eAAgB7C,YAG5BD,KAAK+C,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CAAEC,KAAMjD,eACd,GAAGkD,MAAK,SAAUC,UAClBP,QAAQC,IAAI,WAAYM,SAAUA,SAASC,OAC/C,KAIEC,gBAAkB,SAAUC,UAC9BtD,WAAa,CACTC,MAAO,GACPC,KAAM,mBAAqBoD,SAC3BnD,YAAa,qBAAuBmD,SACpClD,UAAW,uBAAyBkD,SACpCjD,QAAS,GACTC,cAAe,GACfC,UAAW,KAKbgD,QAAU,SAAUC,UACtBxD,WAAWC,MAAMwD,KAAKD,UAAY,CAAE,IAIlCE,SAAW,WAGb,MAAMC,MAAQ7D,EAAE,eAAe8D,MACzBpB,QAAU1C,EAAE,iBAAiB8D,MAQnCpD,kBAAkBmD,MAAQA,MAC1BnD,kBAAkBgC,QAAUA,QAO5Be,QAAQ/C,mBAGRV,EAAE,gBAAgBY,OAClBZ,EAAE,gBAAgByC,KAAK,IAGvB/B,kBAAoB,CAAA,EACpBV,EAAE,kBAAkBa,QAIlBkD,wBAA0B,WAE5B/D,EAAEmC,UAAU6B,GAAG,QAAS,wBAAwB,SAAU5C,GACtDA,EAAEC,iBACFV,aACJ,IAGAX,EAAEmC,UAAU6B,GAAG,QAAS,yBAAyB,SAAU5C,GACvDA,EAAEC,iBACFrB,EAAE,gBAAgBY,MACtB,IAGAZ,EAAEmC,UAAU6B,GAAG,QAAS,cAAc,SAAU5C,GAC5CA,EAAEC,iBACFwB,UACJ,IAGA7C,EAAEmC,UAAU6B,GAAG,QAAS,cAAc,SAAU5C,GAC5CA,EAAEC,iBACFuC,UACJ,IAGA5D,EAAEmC,UAAU6B,GAAG,QAAS,qBAAqB,SAAU5C,GACnDA,EAAEC,iBACFrB,EAAE,gBAAgBY,OAClBM,0BACJ,IAGAlB,EAAEmC,UAAU6B,GAAG,QAAS,oBAAoB,SAAU5C,GAClDA,EAAEC,iBACFH,2BACAR,kBAAoB,CAAA,EACpBV,EAAE,gBAAgBY,MACtB,IAGAZ,EAAEmC,UAAU6B,GAAG,QAAS,yBAAyB,SAAU5C,GACvDA,EAAEC,iBACFrB,EAAE,gBAAgBY,OAClBZ,EAAE,wBAAwBa,OAC1BK,2BACAR,kBAAoB,CAAA,CACxB,IAEAV,EAAEmC,UAAU6B,GAAG,QAAS,kBAAkB,WACtCrD,aACJ,KAIJ,MAAO,CACHD,kBAAmBA,kBACnBR,WAAYA,WACZ+D,KA7NS,SAAUT,UACnBO,0BACAR,gBAAgBC,WA4NhB7C,YAAaA,YACb4C,gBAAiBA,gBACjBE,QAASA,QACTG,SAAUA,SACVf,SAAUA,SACVZ,gBAAiBA,gBACjBnB,kBAAmBA,kBACnBiD,wBAAyBA,wBAEjC"}